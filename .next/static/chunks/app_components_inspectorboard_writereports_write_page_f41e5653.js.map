{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/MR.PC/OneDrive/Desktop/SAVs/seed-app/front/app/components/inspectorboard/writereports/write/page.js"],"sourcesContent":["'use client'\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card, Alert, Table, Spinner } from 'react-bootstrap';\r\nimport { Save, FileText, Printer, Database, Download, Check } from 'lucide-react';\r\nimport jsPDF from 'jspdf';\r\nimport { getSupertoken } from '@/helpers/AccessToken';\r\nimport axios from 'axios';\r\nimport { ApiUrl } from '@/helpers/ApiUrl';\r\n\r\nconst ReportGenerator = () => {\r\n  const [report, setReport] = useState({\r\n    reportBody: \"\",\r\n      reportDate: new Date().toISOString().split('T')[0] ,\r\n            reportType: \"\",\r\n            reportTitle: \"\",\r\n\r\n  });\r\n  const [status, setStatus] = useState('idle'); // idle, saving, saved, error\r\n  const [savedReports, setSavedReports] = useState([]);\r\n  const[reportEnum, setReportEnum] = useState([])\r\n  const usertoken = getSupertoken()\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setReport(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async() => {\r\n        \r\n        try {\r\n\r\n            const response = await axios.get(`${ApiUrl}/inspector_get_report_type_enum`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${usertoken}`\r\n                }\r\n            })\r\n\r\n            setReportEnum(response.data.reportEnum)\r\n            \r\n        } catch (error) {\r\n            console.log(`failed to get enums. Error: ${error}`)\r\n        }\r\n\r\n    }\r\n\r\n    fetchData()\r\n\r\n\r\n  }, [usertoken])\r\n\r\n  const saveToDatabase = async () => {\r\n    \r\n    setStatus('saving');\r\n    \r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      await axios.post(`${ApiUrl}/inspector_create_report`, report, {\r\n        headers: {\r\n            Authorization: `Bearer ${usertoken}`\r\n        }\r\n      })\r\n      \r\n      \r\n      const newReport = { ...report, id: Date.now() };\r\n      setSavedReports(prev => [...prev, newReport]);\r\n      \r\n      setStatus('saved');\r\n      setTimeout(() => setStatus('idle'), 2000);\r\n    } catch (error) {\r\n      setStatus('error');\r\n      setTimeout(() => setStatus('idle'), 2000);\r\n    }\r\n  };\r\n\r\n  const generatePDF = () => {\r\n    \r\n    const doc = new jsPDF();\r\n    \r\n\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const margin = 20;\r\n    const lineHeight = 7;\r\n    let yPosition = 20;\r\n    \r\n    \r\n    doc.setFontSize(18);\r\n    doc.text(report.reportTitle, pageWidth / 2, yPosition, { align: 'center' });\r\n    yPosition += lineHeight * 2;\r\n    \r\n    \r\n    doc.setFontSize(11);\r\n    doc.text(`Type: ${report.reportType.charAt(0).toUpperCase() + report.reportType.slice(1)}`, margin, yPosition);\r\n    yPosition += lineHeight;\r\n    \r\n    doc.text(`Date: ${new Date(report.reportDate).toLocaleDateString()}`, margin, yPosition);\r\n    yPosition += lineHeight * 2;\r\n    \r\n    \r\n    doc.setFontSize(12);\r\n    \r\n\r\n    const contentWidth = pageWidth - (margin * 2);\r\n    const splitContent = doc.splitTextToSize(report.reportBody, contentWidth);\r\n    \r\n    \r\n    if (yPosition + (splitContent.length * lineHeight) > doc.internal.pageSize.getHeight() - margin) {\r\n      doc.addPage();\r\n      yPosition = 20;\r\n    }\r\n    \r\n    doc.text(splitContent, margin, yPosition);\r\n    \r\n    // Save the PDF\r\n    doc.save(`${report.reportTitle.replace(/\\s+/g, '_')}_report.pdf`);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <h1 className=\"mb-4\">Report Generator</h1>\r\n      \r\n      {status === 'saved' && (\r\n        <Alert variant=\"success\" className=\"d-flex align-items-center\">\r\n          <Check size={18} className=\"me-2\" /> Report saved successfully!\r\n        </Alert>\r\n      )}\r\n      \r\n      {status === 'error' && (\r\n        <Alert variant=\"danger\">Failed to save report. Please try again.</Alert>\r\n      )}\r\n      \r\n      <Row>\r\n        <Col md={8}>\r\n          <Card className=\"mb-4\">\r\n            <Card.Header>\r\n              <h4>Create New Report</h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Report Title</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"reportTitle\"\r\n                    value={report.reportTitle}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter report title\"\r\n                  />\r\n                </Form.Group>\r\n                \r\n                <Row className=\"mb-3\">\r\n                  <Col md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>Report Type</Form.Label>\r\n                      <Form.Select\r\n                        name=\"reportType\"\r\n                        value={report.reportType}\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option value=\"\">Select Report Type</option>\r\n\r\n                        {reportEnum?.map((element, index) => (\r\n    <option key={index} value={element}>\r\n      {element}\r\n                      </option>\r\n                    ))}\r\n                        \r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group>\r\n                      <Form.Label>Date</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        name=\"reportDate\"\r\n                        value={report.reportDate}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Report Content</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"reportBody\"\r\n                    value={report.reportBody}\r\n                    onChange={handleInputChange}\r\n                    rows={10}\r\n                    placeholder=\"Enter your report content here...\"\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer className=\"d-flex justify-content-end\">\r\n              <Button \r\n                variant=\"primary\" \r\n                className=\"me-2 d-flex align-items-center\"\r\n                onClick={saveToDatabase}\r\n                disabled={status === 'saving'}\r\n              >\r\n                {status === 'saving' ? (\r\n                  <>\r\n                    <Spinner size=\"sm\" animation=\"border\" className=\"me-2\" />\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Database size={16} className=\"me-2\" />\r\n                    Save to Database\r\n                  </>\r\n                )}\r\n              </Button>\r\n              <Button \r\n                variant=\"success\" \r\n                className=\"d-flex align-items-center\"\r\n                onClick={generatePDF}\r\n                disabled={!report.reportTitle || !report.reportBody}\r\n              >\r\n                <Printer size={16} className=\"me-2\" />\r\n                Generate PDF\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={4}>\r\n          <Card>\r\n            <Card.Header>\r\n              <h4>Saved Reports</h4>\r\n            </Card.Header>\r\n            <Card.Body style={{ maxHeight: '400px', overflowY: 'auto' }}>\r\n              {savedReports.length > 0 ? (\r\n                <Table striped hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Title</th>\r\n                      <th>Type</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {savedReports.map(savedReport => (\r\n                      <tr key={savedReport.id}>\r\n                        <td>{savedReport.title}</td>\r\n                        <td>{savedReport.type}</td>\r\n                        <td>\r\n                          <Button \r\n                            variant=\"outline-primary\" \r\n                            size=\"sm\"\r\n                            className=\"me-1\"\r\n                            onClick={() => setReport(savedReport)}\r\n                          >\r\n                            <FileText size={14} />\r\n                          </Button>\r\n                           <Button \r\n                            variant=\"outline-success\" \r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              setReport(savedReport);\r\n                              generatePDF();\r\n                            }}\r\n                          >\r\n                            <Download size={14} />\r\n                          </Button> \r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <p className=\"text-muted text-center\">No reports saved yet</p>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReportGenerator;"],"names":[],"mappings":"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","debugId":null}}]
}